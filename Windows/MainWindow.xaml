<controls:MetroWindow x:Class="Ruminoid.Dashboard.Windows.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:Ruminoid.Dashboard.Windows"
                      xmlns:chrome="http://schemes.grabacr.net/winfx/2014/chrome"
                      xmlns:controls="http://schemes.grabacr.net/winfx/2014/controls"
                      xmlns:yDock="clr-namespace:YDock;assembly=YDock"
                      xmlns:visualIcon="clr-namespace:VisualIcon;assembly=VisualIcon"
                      mc:Ignorable="d"
                      FontFamily="Segoe UI"
                      Background="{DynamicResource ThemeBrushKey}"
                      Foreground="White"
                      UseLayoutRounding="True"
                      IsRestoringWindowPlacement="True"
                      TextOptions.TextFormattingMode="Display"
                      SnapsToDevicePixels="True" Height="720" Width="1280"
                      MinHeight="720" MinWidth="1280"
                      Title="Ruminoid"
                      Icon="../Assets/Icon.ico"
                      WindowStartupLocation="CenterScreen"
                      Name="RootElement">

    <chrome:WindowChrome.Instance>
        <chrome:WindowChrome />
    </chrome:WindowChrome.Instance>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" controls:MetroWindow.IsCaptionBar="True" Height="0" />

        <Border Grid.Row="0" Name="WndIn">
            <Grid>
                <!--<controls:CaptionIcon Grid.Column="0">
                    -->
                <!--<Ellipse Width="18"
							 Height="18"
							 Fill="{DynamicResource ActiveForegroundBrushKey}" />-->
                <!--
                </controls:CaptionIcon>-->
                <Grid>
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="../Assets/Logo.png"
                               Width="150" Height="150" />
                        <TextBlock Grid.Column="1" VerticalAlignment="Center"
                                   Text="Ruminoid" FontSize="48"
                                   FontWeight="Light" Margin="12,0,0,0" />
                    </Grid>
                </Grid>
                <controls:SystemButtons Grid.Column="2" Name="WndOut"
                                        VerticalAlignment="Top" HorizontalAlignment="Right" />
            </Grid>
        </Border>

        <TabControl Grid.Row="1" Style="{DynamicResource DashboardTabControlStyle}">
            <TabItem Header="应用" Style="{DynamicResource DashboardTabItemStyle}">
                <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <ListView Margin="24" Background="Transparent" BorderBrush="Transparent"
                                  Foreground="White"
                                  xmlns:prods="clr-namespace:Ruminoid.Dashboard.Helpers"
                                  DataContext="{x:Static prods:ProductHelper.Current}"
                                  ItemsSource="{Binding DisplayProductList}"
                                  HorizontalContentAlignment="Stretch"
                                  SelectionMode="Single">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Focusable" Value="false" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="12">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Margin="0,12">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Key}" />
                                            <Grid Grid.Column="1" Background="White" Height="1"
                                                  Margin="18,0,0,0" Opacity="0.2" />
                                        </Grid>
                                        <Grid Grid.Row="1" Margin="0,12">
                                            <ListView Background="Transparent" BorderBrush="Transparent"
                                                      ItemsSource="{Binding Value}"
                                                      SelectionMode="Single">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="Focusable" Value="false" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Button Tag="{Binding}" Click="ProductButtonBase_OnClick">
                                                            <Grid Width="350" Height="120">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <Image Grid.Column="0" Source="{Binding Logo}"
                                                                       Height="114" Width="114"
                                                                       HorizontalAlignment="Center"
                                                                       Stretch="Uniform" VerticalAlignment="Center" />
                                                                <Grid Grid.Column="1" VerticalAlignment="Center">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition />
                                                                    </Grid.RowDefinitions>
                                                                    <TextBlock Grid.Row="0" Text="{Binding Title}"
                                                                               Margin="0,0,0,12"
                                                                               FontSize="24" />
                                                                    <TextBlock Grid.Row="1"
                                                                               Text="{Binding Description}"
                                                                               Margin="0,0,0,6"
                                                                               TextWrapping="Wrap" />
                                                                </Grid>
                                                            </Grid>
                                                        </Button>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="连接" Style="{DynamicResource DashboardTabItemStyle}">
                <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid Margin="24">
                            <TextBlock Text="R/Connect 不可用。" />
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="设置" Style="{DynamicResource DashboardTabItemStyle}">
                <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid Margin="36,24">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="24,0"
                                        xmlns:helpers="clr-namespace:Ruminoid.Dashboard.Helpers"
                                        DataContext="{x:Static helpers:UpdateHelper.Current}">
                                <TextBlock Text="更新" Style="{DynamicResource ShellTitleTextStyle}" Margin="0,0,0,24" />
                                <TextBlock Text="状态" Margin="0,0,0,24" />
                                <Grid Margin="0,0,0,24">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Style="{DynamicResource UpdateButtonStyle}"
                                            Click="UpdateButtonBase_OnClick"/>
                                    <StackPanel Grid.Column="1" Margin="12,0,0,0">
                                        <TextBlock Margin="0,0,0,12" Style="{DynamicResource UpdateTextBlockStyle}"/>
                                        <ProgressBar Value="{Binding UpdateProgress}">
                                            <ProgressBar.Style>
                                                <Style TargetType="ProgressBar">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdateMode}" Value="search">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding UpdateMode}" Value="down">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding UpdateMode}" Value="inst">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ProgressBar.Style>
                                        </ProgressBar>
                                    </StackPanel>
                                </Grid>
                                <TextBlock Text="服务" Margin="0,0,0,12" />
                                <StackPanel Margin="0,0,0,24">
                                    <Grid Margin="0,0,0,12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0"
                                                 IsEnabled="{Binding IsChecked, ElementName=UpdateServerLock}"
                                                 xmlns:config="clr-namespace:Ruminoid.Dashboard"
                                                 DataContext="{x:Static config:Config.Current}"
                                                 Text="{Binding UpdateServer, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalAlignment="Center" Margin="0,0,12,0"
                                                 Background="Transparent" Foreground="White" />
                                        <ToggleButton Name="UpdateServerLock" Grid.Column="1"
                                                      Style="{DynamicResource LockToggleButtonStyle}" />
                                    </Grid>
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Text" Value="点按锁按钮以进行修改。" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding IsChecked, ElementName=UpdateServerLock}"
                                                        Value="true">
                                                        <Setter Property="Text" Value="请确保您清楚您在做什么。地址需要以斜杠结尾。" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                                <TextBlock Text="通道" Margin="0,0,0,12" />
                                <StackPanel Margin="0,0,0,24">
                                    <Grid Margin="0,0,0,12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <RadioButton Grid.Column="0" Content="正式版" Tag="stable"
                                                     xmlns:config="clr-namespace:Ruminoid.Dashboard"
                                                     DataContext="{x:Static config:Config.Current}"
                                                     IsEnabled="{Binding IsChecked, ElementName=UpdateChannelLock}"
                                                     Click="UpdateChannelButtonBase_OnClick"
                                                     Foreground="White">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton">
                                                    <Setter Property="IsChecked" Value="False" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdateChannel}"
                                                                     Value="stable">
                                                            <Setter Property="IsChecked" Value="True" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>
                                        <RadioButton Grid.Column="1" Content="预览版" Tag="beta"
                                                     xmlns:config="clr-namespace:Ruminoid.Dashboard"
                                                     DataContext="{x:Static config:Config.Current}"
                                                     IsEnabled="{Binding IsChecked, ElementName=UpdateChannelLock}"
                                                     Click="UpdateChannelButtonBase_OnClick"
                                                     Foreground="White">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton">
                                                    <Setter Property="IsChecked" Value="False" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdateChannel}"
                                                                     Value="beta">
                                                            <Setter Property="IsChecked" Value="True" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>
                                        <RadioButton Grid.Column="2" Content="自定义" Tag="others"
                                                     xmlns:config="clr-namespace:Ruminoid.Dashboard"
                                                     DataContext="{x:Static config:Config.Current}"
                                                     IsEnabled="{Binding IsChecked, ElementName=UpdateChannelLock}"
                                                     Click="UpdateChannelButtonBase_OnClick"
                                                     Foreground="White">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton">
                                                    <Setter Property="IsChecked" Value="True" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdateChannel}"
                                                                     Value="stable">
                                                            <Setter Property="IsChecked" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding UpdateChannel}"
                                                                     Value="beta">
                                                            <Setter Property="IsChecked" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>
                                    </Grid>
                                    <Grid Margin="0,0,0,12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0"
                                                 IsEnabled="{Binding IsChecked, ElementName=UpdateChannelLock}"
                                                 xmlns:config="clr-namespace:Ruminoid.Dashboard"
                                                 DataContext="{x:Static config:Config.Current}"
                                                 Text="{Binding UpdateChannel, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalAlignment="Center" Margin="0,0,12,0"
                                                 Background="Transparent" Foreground="White" />
                                        <ToggleButton Name="UpdateChannelLock" Grid.Column="1"
                                                      Style="{DynamicResource LockToggleButtonStyle}" />
                                    </Grid>
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Text" Value="点按锁按钮以进行修改。" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding IsChecked, ElementName=UpdateChannelLock}"
                                                        Value="true">
                                                        <Setter Property="Text" Value="请确保您清楚您在做什么。" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Column="1" Margin="24,0">
                                <TextBlock Text="关于" Style="{DynamicResource ShellTitleTextStyle}" Margin="0,0,0,24" />
                                <TextBlock Text="Ruminoid（ルミノイド）" FontSize="18" FontWeight="Bold" Margin="0,0,0,24" />
                                <TextBlock Text="{Binding AppVersion, ElementName=RootElement}" Margin="0,0,0,24" />
                                <TextBlock Text="Ruminoid, R/Connect, Ruminoid World等其他一切Ruminoid产品均属于Ruminoid的子产品。"
                                           Margin="0,0,0,24" TextWrapping="Wrap" />
                                <TextBlock Text="© 2020 Il Harper。保留所有权利。" Margin="0,0,0,24" TextWrapping="Wrap" />
                                <TextBlock Text="Ruminoid产品的开源项目中所使用的一切第三方项目之权利均归其所有者所有。"
                                           Margin="0,0,0,24" TextWrapping="Wrap" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </TabItem>
        </TabControl>

        <Grid Grid.Row="2"
              Background="{DynamicResource AccentBrushKey}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <controls:ResizeGrip Grid.Column="1" />
        </Grid>
    </Grid>
</controls:MetroWindow>